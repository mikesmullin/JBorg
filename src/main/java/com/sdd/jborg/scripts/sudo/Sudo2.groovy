package com.sdd.jborg.scripts.sudo

import static com.sdd.jborg.scripts.Standard.*

class Sudo2
	implements Script
{
	private static def defaults = ["!lecture,tty_tickets,!fqdn"]
	private static def users = []
	private static def groups = ["sysadmin"]
	private static def passwordless = false
	private static def includeSudoersD = false
	private static def agentForwarding = false
	private static def commandAliases = []
	private static def prefix = "/etc"

	@Override
	def included()
	{
		then install("sudo")

		then template("$prefix/sudoers")
			.setTemplateBody("""
				#######################################################################
				# WARNING: This file automatically generated by Borg on $server.timestamp
				#          If you need to edit this file, do so in the Borg repository.
				#          Any change you make here WILL be overridden on assimilation.
				#######################################################################

				${defaults.collect{ d -> "Defaults $d" }.join "\n"}
				${agentForwarding ? "Defaults env_keep+=SSH_AUTH_SOCK" : ""}

				# User privilege specification
				root ALL=(ALL) ALL

				${commandAliases.collect{ a -> "Cmnd_Alias $a" }.join "\n"}

				${users.collect{ u -> "$u ALL=(ALL) ${passwordless ? "NOPASSWD:" : ""} ALL"}.join "\n"}

				${groups.collect{ g -> """
					# Members of the group $g may gain root privileges
					%$g ALL=(ALL) ${passwordless ? "NOPASSWD:" : ""}ALL
					"""}.join "\n"}
				""")
			.setOwner("root")
			.setGroup("root")
			.setSudo(true)
			.setMode("0440")
	}
}
